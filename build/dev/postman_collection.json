{
	"info": {
		"_postman_id": "79e3b318-f6f6-4bf0-ab47-a238f9aa47c7",
		"name": "DSS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Remote ID",
			"item": [
				{
					"name": "ISA cycle",
					"item": [
						{
							"name": "Get read token from dummy OAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ad58ff7-551b-4269-b4aa-50738b57e88f",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"read_isas_access_token\", data.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8085/token?grant_type=client_credentials&scope=dss.read.identification_service_areas&intended_audience=localhost&issuer=localhost",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8085",
									"path": [
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "client_credentials"
										},
										{
											"key": "scope",
											"value": "dss.read.identification_service_areas"
										},
										{
											"key": "intended_audience",
											"value": "localhost"
										},
										{
											"key": "issuer",
											"value": "localhost"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ISAs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "219e52bb-fc71-4f41-bfb7-bd1250d675c7",
										"exec": [
											"postman.setEnvironmentVariable(\"area\", \"19.4763,-155.6043,19.4884,-155.5746,19.4516,-155.5941\");",
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_now\", moment().toISOString());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{read_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/identification_service_areas?area={{area}}&earliest_time={{timestamp_now}}&latest_time={{timestamp_now}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"identification_service_areas"
									],
									"query": [
										{
											"key": "area",
											"value": "{{area}}"
										},
										{
											"key": "earliest_time",
											"value": "{{timestamp_now}}"
										},
										{
											"key": "latest_time",
											"value": "{{timestamp_now}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get write token from dummy OAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38485b1e-517a-4d6f-b67a-7f08f77a2c4a",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"write_isas_access_token\", data.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8085/token?grant_type=client_credentials&scope=dss.write.identification_service_areas&intended_audience=localhost&issuer=localhost",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8085",
									"path": [
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "client_credentials"
										},
										{
											"key": "scope",
											"value": "dss.write.identification_service_areas"
										},
										{
											"key": "intended_audience",
											"value": "localhost"
										},
										{
											"key": "issuer",
											"value": "localhost"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ISA (new)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6a4ed5f3-285f-481d-b254-166c0484f402",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_start\", moment().subtract(2, 'seconds').toISOString());",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1928332c-b599-44b2-9b98-abf9134a4e80",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"isa_version\", data.service_area.version);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{write_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extents\": {\n    \"spatial_volume\": {\n      \"footprint\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lo\": 0,\n      \"altitude_hi\": 122\n    },\n    \"time_start\": \"{{timestamp_start}}\",\n    \"time_end\": \"{{timestamp_end}}\"\n  },\n  \"flights_url\": \"https://example.com/flights\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/identification_service_areas/3e66732f-985e-4043-950a-dea2c3881ec2",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"identification_service_areas",
										"3e66732f-985e-4043-950a-dea2c3881ec2"
									]
								}
							},
							"response": []
						},
						{
							"name": "ISA (update)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "595fe95c-b13e-4b04-b1d7-a1689f655c97",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "94b6321e-49ba-4c9e-9bf8-2b37b8975bdc",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"isa_version\", data.service_area.version);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{write_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extents\": {\n    \"spatial_volume\": {\n      \"footprint\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lo\": 0,\n      \"altitude_hi\": 122\n    },\n    \"time_start\": \"{{timestamp_start}}\",\n    \"time_end\": \"{{timestamp_end}}\"\n  },\n  \"flights_url\": \"https://example.com/flights\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/identification_service_areas/3e66732f-985e-4043-950a-dea2c3881ec2/{{isa_version}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"identification_service_areas",
										"3e66732f-985e-4043-950a-dea2c3881ec2",
										"{{isa_version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ISA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3e5170e6-9155-42fd-91a6-499eedaf102d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9fa14992-b3f9-42d0-9a49-09f79b475a5c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{write_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/identification_service_areas/3e66732f-985e-4043-950a-dea2c3881ec2/{{isa_version}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"identification_service_areas",
										"3e66732f-985e-4043-950a-dea2c3881ec2",
										"{{isa_version}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5b1efa9a-9f7c-404e-8f83-77d216d0dbe7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ebc0bfcf-4d4c-45fc-9b4d-82ea8716a2a5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Get read token from dummy OAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "737fe10d-ccf8-4e41-8564-fd2b5672bb4f",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"read_isas_access_token\", data.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8085/token?grant_type=client_credentials&scope=dss.read.identification_service_areas&intended_audience=localhost&issuer=localhost",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8085",
									"path": [
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "client_credentials"
										},
										{
											"key": "scope",
											"value": "dss.read.identification_service_areas"
										},
										{
											"key": "intended_audience",
											"value": "localhost"
										},
										{
											"key": "issuer",
											"value": "localhost"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Subscriptions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cc98f5a5-78f0-4cac-b397-c247b78999d9",
										"exec": [
											"postman.setEnvironmentVariable(\"area\", \"19.4763,-155.6043,19.4884,-155.5746,19.4516,-155.5941\");",
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_now\", moment().toISOString());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{read_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/subscriptions?area={{area}}&earliest_time={{timestamp_now}}&latest_time={{timestamp_now}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"subscriptions"
									],
									"query": [
										{
											"key": "area",
											"value": "{{area}}"
										},
										{
											"key": "earliest_time",
											"value": "{{timestamp_now}}"
										},
										{
											"key": "latest_time",
											"value": "{{timestamp_now}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Subscription (new)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4587858c-324a-4805-92ad-af15088dae88",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_start\", moment().subtract(2, 'seconds').toISOString());",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d1dfba7-b86c-43e4-8999-712abd0857f7",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"rid_sub_version\", data.subscription.version);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{read_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extents\": {\n    \"spatial_volume\": {\n      \"footprint\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lo\": 0,\n      \"altitude_hi\": 122\n    },\n    \"time_start\": \"{{timestamp_start}}\",\n    \"time_end\": \"{{timestamp_end}}\"\n  },\n  \"callbacks\": {\n  \t\"identification_service_area_url\": \"https://example.com/isas\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/subscriptions/f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"subscriptions",
										"f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Subscription (update)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57b75872-0086-4616-9236-56422aab64bd",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b9c68ba9-32bb-4238-bc27-e7af7f48716a",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"rid_sub_version\", data.subscription.version);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{write_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extents\": {\n    \"spatial_volume\": {\n      \"footprint\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lo\": 0,\n      \"altitude_hi\": 122\n    },\n    \"time_start\": \"{{timestamp_start}}\",\n    \"time_end\": \"{{timestamp_end}}\"\n  },\n  \"callbacks\": {\n  \t\"identification_service_area_url\": \"https://example.com/isas\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/subscriptions/f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9/{{rid_sub_version}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"subscriptions",
										"f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9",
										"{{rid_sub_version}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Subscription",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "62df6c65-15bb-4bbc-aff8-3d1374104f92",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9af0f8ad-4e52-4917-ba55-889404bb6b61",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{read_isas_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{dss_base_url}}/v1/dss/subscriptions/f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9/{{rid_sub_version}}",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"v1",
										"dss",
										"subscriptions",
										"f5de7ae5-08a0-4be5-bd6d-ad4a3a8307a9",
										"{{rid_sub_version}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Strategic conflict detection",
			"item": [
				{
					"name": "Operation cycle",
					"item": [
						{
							"name": "Get strategic coordination token from dummy OAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ef27a9ec-f59e-4099-a0be-288e50fce2de",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"strategic_coordination_access_token\", data.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8085/token?grant_type=client_credentials&scope=utm.strategic_coordination&intended_audience=localhost&issuer=localhost",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8085",
									"path": [
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "client_credentials"
										},
										{
											"key": "scope",
											"value": "utm.strategic_coordination"
										},
										{
											"key": "intended_audience",
											"value": "localhost"
										},
										{
											"key": "issuer",
											"value": "localhost"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Operations",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5e82267-4dd6-4d25-9052-31f3aec6bb8d",
										"exec": [
											"postman.setEnvironmentVariable(\"area\", \"19.4763,-155.6043,19.4884,-155.5746,19.4516,-155.5941\");",
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_now\", moment().toISOString());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{strategic_coordination_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"area_of_interest\": {\n\t\t\"time_start\": {\n\t\t\t\"value\": \"{{timestamp_now}}\",\n\t\t\t\"format\": \"RFC3339\"\n\t\t},\n\t\t\"time_end\": {\n\t\t\t\"value\": \"{{timestamp_now}}\",\n\t\t\t\"format\": \"RFC3339\"\n\t\t},\n\t\t\"volume\": {\n\t\t\t\"altitude_lower\": {\n\t\t\t\t\"value\": 0,\n\t\t\t\t\"reference\": \"W84\",\n\t\t\t\t\"units\": \"M\"\n\t\t\t},\n\t\t\t\"altitude_upper\": {\n\t\t\t\t\"value\": 3000,\n\t\t\t\t\"reference\": \"W84\",\n\t\t\t\t\"units\": \"M\"\n\t\t\t},\n\t\t\t\"outline_circle\": {\n\t\t\t\t\"center\": {\n\t\t\t\t\t\"lat\": 34,\n\t\t\t\t\t\"lng\": -118\n\t\t\t\t},\n\t\t\t\t\"radius\": {\n\t\t\t\t\t\"value\": 100,\n\t\t\t\t\t\"units\": \"M\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/dss/v1/operation_references/query",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"dss",
										"v1",
										"operation_references",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Operation (new)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0bce86bb-89d5-4cf3-aff8-01b5d19e5d6f",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_start\", moment().subtract(2, 'seconds').toISOString());",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c8545c8a-a063-42fd-b817-d9f1fa5a6e76",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"op_version\", data.operation_reference.version);",
											"postman.setEnvironmentVariable(\"op_subscription_id\", data.operation_reference.subscription_id)",
											"postman.setEnvironmentVariable(\"op_ovn\", data.operation_reference.ovn)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{strategic_coordination_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"extents\": [{\n    \"volume\": {\n      \"outline_polygon\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lower\": {\n      \t  \"value\": 0,\n      \t  \"units\": \"M\"\n      },\n      \"altitude_upper\": {\n      \t  \"value\": 122,\n      \t  \"units\": \"M\"\n      }\n    },\n    \"time_start\": {\n    \t\"value\": \"{{timestamp_start}}\",\n    \t\"format\": \"RFC3339\"\n    },\n    \"time_end\": {\n    \t\"value\": \"{{timestamp_end}}\",\n    \t\"format\": \"RFC3339\"\n    }\n  }],\n  \"uss_base_url\": \"https://example.com\",\n  \"state\": \"Accepted\",\n  \"new_subscription\": {\n  \t\"uss_base_url\": \"https://example.com\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/dss/v1/operation_references/df34b07c-b3bd-4bcc-8570-6a5d724b46d5",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"dss",
										"v1",
										"operation_references",
										"df34b07c-b3bd-4bcc-8570-6a5d724b46d5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Operation (update)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "686d103b-265b-4578-927e-116589f94233",
										"exec": [
											"const moment = require('moment');",
											"pm.globals.set(\"timestamp_start\", moment().subtract(2, 'seconds').toISOString());",
											"pm.globals.set(\"timestamp_end\", moment().add(5, 'minutes').toISOString());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffa195ce-445e-4503-b322-99e7012b2126",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var data = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"op_version\", data.operation_reference.version);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{strategic_coordination_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"old_version\": {{op_version}},\n  \"key\": [\"{{op_ovn}}\"],\n  \"extents\": [{\n    \"volume\": {\n      \"outline_polygon\": {\n        \"vertices\": [\n          {\n            \"lng\": -155.6043,\n            \"lat\": 19.4763\n          },\n          {\n            \"lng\": -155.5746,\n            \"lat\": 19.4884\n          },\n          {\n            \"lng\": -155.5941,\n            \"lat\": 19.4516\n          }\n        ]\n      },\n      \"altitude_lower\": {\n      \t  \"value\": 0,\n      \t  \"units\": \"M\"\n      },\n      \"altitude_upper\": {\n      \t  \"value\": 122,\n      \t  \"units\": \"M\"\n      }\n    },\n    \"time_start\": {\n    \t\"value\": \"{{timestamp_start}}\",\n    \t\"format\": \"RFC3339\"\n    },\n    \"time_end\": {\n    \t\"value\": \"{{timestamp_end}}\",\n    \t\"format\": \"RFC3339\"\n    }\n  }],\n  \"uss_base_url\": \"https://example.com\",\n  \"state\": \"Activated\",\n  \"subscription_id\": \"{{op_subscription_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dss_base_url}}/dss/v1/operation_references/df34b07c-b3bd-4bcc-8570-6a5d724b46d5",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"dss",
										"v1",
										"operation_references",
										"df34b07c-b3bd-4bcc-8570-6a5d724b46d5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Operation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fa4d1d15-d6fc-46cf-8e8e-0f461b8875db",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "34e79e8c-129a-46bb-85a7-7c078e82508d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{strategic_coordination_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{dss_base_url}}/dss/v1/operation_references/df34b07c-b3bd-4bcc-8570-6a5d724b46d5",
									"host": [
										"{{dss_base_url}}"
									],
									"path": [
										"dss",
										"v1",
										"operation_references",
										"df34b07c-b3bd-4bcc-8570-6a5d724b46d5"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "458ba1d6-4694-4174-8cb1-ecb1c90f4d88",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc8519db-4941-44c4-981b-7f2555e1c5f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aux",
			"item": [
				{
					"name": "Version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{read_isas_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dss_base_url}}/aux/v1/version",
							"host": [
								"{{dss_base_url}}"
							],
							"path": [
								"aux",
								"v1",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate RID ISA read token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{read_isas_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dss_base_url}}/aux/v1/validate_oauth",
							"host": [
								"{{dss_base_url}}"
							],
							"path": [
								"aux",
								"v1",
								"validate_oauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate RID ISA write token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{write_isas_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dss_base_url}}/aux/v1/validate_oauth",
							"host": [
								"{{dss_base_url}}"
							],
							"path": [
								"aux",
								"v1",
								"validate_oauth"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Set http://localhost:8082 as base URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "14567dba-c575-437c-8a75-cd152cd1c1bc",
						"exec": [
							"postman.setEnvironmentVariable(\"dss_base_url\", \"http://localhost:8082\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8082/healthy",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"healthy"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}